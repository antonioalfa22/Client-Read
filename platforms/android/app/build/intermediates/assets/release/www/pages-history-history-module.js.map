{"version":3,"sources":["webpack:///./src/app/pages/history/history.module.ts","webpack:///./src/app/pages/history/history.page.html","webpack:///./src/app/pages/history/history.page.scss","webpack:///./src/app/pages/history/history.page.ts"],"names":[],"mappings":"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","file":"pages-history-history-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { HistoryPage } from './history.page';\nimport { MatTableModule, MatPaginatorModule } from '@angular/material';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HistoryPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MatTableModule,\n    MatPaginatorModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [HistoryPage]\n})\nexport class HistoryPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>History</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <div class=\\\"row\\\">\\n   <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header card-header-orange\\\">\\n                <h4 class=\\\"card-title \\\">Historial de modificaciones del dato {{id}}</h4>\\n                <p class=\\\"card-category\\\"> Lista con todos los datos proporcionados por los devices</p>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n                <div class=\\\"table-responsive\\\">\\n                    <table class=\\\"table\\\" [dataSource]=\\\"dataSource\\\" mat-table>\\n                        <!-- Position Column -->\\n                        <ng-container matColumnDef=\\\"transid\\\">\\n                          <th mat-header-cell *matHeaderCellDef class=\\\" text-primary\\\"> TransId </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TxId}} </td>\\n                        </ng-container>\\n\\n                        <ng-container matColumnDef=\\\"timestamp\\\">\\n                          <th mat-header-cell *matHeaderCellDef class=\\\" text-primary\\\"> Timestamp </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Timestamp}} </td>\\n                        </ng-container>\\n\\n                        <!-- Name Column -->\\n                        <ng-container matColumnDef=\\\"temp\\\">\\n                          <th mat-header-cell *matHeaderCellDef class=\\\" text-primary\\\"> Temperatura </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Value.temperature}} </td>\\n                        </ng-container>\\n\\n                        <!-- Weight Column -->\\n                        <ng-container matColumnDef=\\\"device\\\">\\n                          <th mat-header-cell *matHeaderCellDef class=\\\" text-primary\\\"> Device </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Value.device}} </td>\\n                        </ng-container>\\n\\n                        <!-- Symbol Column -->\\n                        <ng-container  matColumnDef=\\\"gps\\\">\\n                          <th mat-header-cell *matHeaderCellDef class=\\\" text-primary\\\"> Coordenates </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Value.gps}} </td>\\n                        </ng-container>\\n\\n                        <ng-container  matColumnDef=\\\"node\\\">\\n                          <th mat-header-cell *matHeaderCellDef class=\\\" text-primary\\\"> Node </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Value.node}} </td>\\n                        </ng-container>\\n\\n                        <ng-container matColumnDef=\\\"time\\\">\\n                          <th mat-header-cell *matHeaderCellDef class=\\\" text-primary\\\"> Hour </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Value.hour}} </td>\\n                        </ng-container>\\n\\n                        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n                    </table>\\n                </div>\\n            </div>\\n            <div class=\\\"card-footer\\\">\\n              <mat-paginator [length]=\\\"100\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 20]\\\">\\n              </mat-paginator>\\n            </div>\\n        </div>\\n    </div>\\n  </div>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2hpc3RvcnkvaGlzdG9yeS5wYWdlLnNjc3MifQ== */\"","import { UserService } from './../../services/user/user.service';\nimport { DeviceService } from './../../services/device/device.service';\nimport { Component, OnInit,ViewChild } from '@angular/core';\nimport { ActivatedRoute } from \"@angular/router\";\nimport { MatPaginator, MatPaginatorModule, MatTableDataSource } from '@angular/material';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.page.html',\n  styleUrls: ['./history.page.scss'],\n})\nexport class HistoryPage implements OnInit {\n\n  displayedColumns: string[] = ['transid', 'timestamp', 'temp', 'device', 'gps', 'node', 'time' ];\n  dataSource;\n  id: string;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  constructor(\n    private route: ActivatedRoute,\n    private deviceApi: DeviceService,\n    private userApi: UserService,\n    private router:Router\n  ) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      this.id = params.get('id');\n    });\n    \n    this.deviceApi.getHistoryData(this.id).subscribe(res => {\n      let data = [];\n      for (let key in res) {\n        let date = new Date(parseInt(res[key]['Value']['hour']));\n        res[key]['Value']['hour'] = date.toLocaleDateString() + \" \" + date.toLocaleTimeString();\n        data.push(res[key]);\n      }\n\n      this.dataSource = new MatTableDataSource(data);\n      this.dataSource.paginator = this.paginator;\n    }\n      , err => {\n\n        console.log(err.status);\n        this.userApi.logout();\n        this.router.navigate(['/login'], { replaceUrl: true });\n      });\n\n\n  }\n\n}\n"],"sourceRoot":""}